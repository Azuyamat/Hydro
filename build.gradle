plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0-Beta2'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "co.uzzu.dotenv.gradle" version "4.0.0"
}

group = 'com.azuyamat'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT" // Paper API
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" // Kotlin Standard Library
    implementation "org.jetbrains.kotlin:kotlin-reflect" // Kotlin Reflection
    api "org.reflections:reflections:0.9.12" // Reflections
    implementation "net.kyori:adventure-text-minimessage:4.14.0" // Adventure MiniMessage
    implementation 'fr.mrmicky:fastboard:2.0.2' // FastBoard

    // FAWE
    implementation(platform("com.intellectualsites.bom:bom-newest:1.40")) // Ref: https://github.com/IntellectualSites/bom
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit")

    implementation("com.github.DebitCardz:mc-chestui-plus:1.4.5") // ChestUI+ by DebitCardz
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}

tasks.register('copyJar', Copy) {
    println("Copying jar to plugins folder")
    println("Plugins folder: ${env.PLUGINS_PATH.value}")
    from shadowJar
    into env.PLUGINS_PATH.value
}

tasks.register('startServer', Exec) {
    onlyIf { env.START_SERVER.value == "true" }
    println("Starting server")
    commandLine env.BOXES_PATH.value, 'start', env.SERVER_NAME.value
}

tasks.jar.finalizedBy(tasks.copyJar)
tasks.shadowJar.finalizedBy(tasks.copyJar)
tasks.copyJar.finalizedBy(tasks.startServer)

build {
    dependsOn shadowJar
}

shadowJar {
    relocate 'fr.mrmicky.fastboard', 'com.azuyamat.fastboard'
}